{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api/index.js","webpack:///./src/api/routes/auth/auth.ctrl.js","webpack:///./src/api/routes/auth/index.js","webpack:///./src/app.js","webpack:///./src/config/index.js","webpack:///./src/serverless.js","webpack:///external \"amazon-cognito-identity-js\"","webpack:///external \"aws-sdk\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"jwk-to-pem\"","webpack:///external \"path\"","webpack:///external \"request\"","webpack:///external \"serverless-http\""],"names":["router","express","Router","use","auth","CognitoUserPool","AmazonCognitoIdentity","userPool","config","poolData","register","ctx","attributeList","push","Name","Value","body","email","signUp","id","pw","err","result","console","log","login","req","res","authenticationDetails","Username","Password","userData","Pool","cognitoUser","authenticateUser","onSuccess","tokens","accessToken","getAccessToken","getJwtToken","idToken","getIdToken","refreshToken","getRefreshToken","getToken","updateLogin","success","json","onFailure","error","token","credentials","url","pool_region","UserPoolId","IdentityPoolId","AWS","update","CognitoIdentityCredentials","getCurrentUser","getSession","loginUrl","Logins","updateAttributes","post","authCtrl","app","urlencoded","extended","cors","api","env","process","handler","serverless"],"mappings":"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","file":"src/serverless.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/serverless.js\");\n","import user from 'api/routes/user';\nimport book from 'api/routes/book';\nimport auth from 'api/routes/auth';\n//import authCheck from 'lib/middleware/authCheck';\nimport express from 'express';\n\nconst router = express.Router();\n\nrouter.use('/auth', auth);\n//router.use('/user', authCheck(), user);\n//router.use('/book', authCheck(), book);\n\nexport default router;\n\n\n","import config from 'config';\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\nimport AWS from 'aws-sdk';\nimport request from 'request';\nimport jwkToPem from 'jwk-to-pem';\nimport jwt from 'jsonwebtoken'\nimport { resolve } from 'path';\n\nconst CognitoUserPool = AmazonCognitoIdentity.CognitoUserPool;\nconst userPool = new AmazonCognitoIdentity.CognitoUserPool(config.poolData);\n\n\nexport const register = async ctx => {\n    try{\n        const attributeList = [];\n        //이후 어떤 값을 더받아야하는지 얘기후 추가\n        attributeList.push(new AmazonCognitoIdentity.CognitoUserAttribute({Name:'email',Value:ctx.body.email}));\n        userPool.signUp(ctx.body.id,ctx.body.pw,attributeList,null,function(err,result){\n            if(err){\n                console.log(err);\n                return;\n            }\n            console.log(result);\n            //let cognitoUser = result.user;\n        });\n    }catch(err){\n        console.log(err);\n    }\n}\n\nexport const login = async (req,res) => {\n    try {\n        const authenticationDetails = new AmazonCognitoIdentity.AuthenticationDetails({\n            Username: req.body.id,\n            Password: req.body.pw\n        });\n        \n        const userData = {\n            Username: req.body.id,\n            Pool: userPool\n        };\n        const cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n        //console.log(authenticationDetails)\n        cognitoUser.authenticateUser(authenticationDetails, {\n            \n            onSuccess: function(result){\n                // console.log(result)\n                // console.log('access token : ' + result.getAccessToken().getJwtToken());\n                // console.log('id token : ' + result.getIdToken().getJwtToken());\n                // console.log('Refresh token : ' + result.getRefreshToken().getToken());\n                const tokens = {\n                    accessToken: result.getAccessToken().getJwtToken(),\n                    idToken:result.getIdToken().getJwtToken(),\n                    refreshToken: result.getRefreshToken().getToken()\n                };\n\t\t//로그인 이후 받은 토큰 저장\n                cognitoUser['tokens'] = tokens;\n                //console.log(cognitoUser);\n                //resolve(cognitoUser);\n\t\t\n\t\t//로그인된 유저 권한부여\n                updateLogin(result.getIdToken().getJwtToken());\n                console.log('here')\n\t\t//마지막으로 로그인된 유저에 대한 세션 받아와서 loginUrl 생성\n                success(result.getAccessToken().getJwtToken());\n            \n                //console.log(cognitoUser)\n                //res.JSON(cognitoUser['tokens'])\n                //console.log(res)\n\t\t//id토큰만 줘도되는지 이후 결정\n                res.json({\n                    tokens:cognitoUser['tokens']})\n            },\n            onFailure: function(err){\n                console.log(err);\n            }\n\n        });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nconst updateLogin = async token => {\n    try{\n        const credentials = {};\n        const url = 'cognito-idp.' + config.pool_region + '.amazonaws.com/' + config.poolData.UserPoolId;\n        credentials['Logins'] = {};\n        credentials['Logins'][url] = token;\n        credentials['IdentityPoolId'] = config.IdentityPoolId;\n        AWS.config.update({\n            credentials: new AWS.CognitoIdentityCredentials(credentials)\n            \n        });\n    }catch (error){\n        console.log(error)\n    }\n}\n\nconst success = async token => {\n    const cognitoUser = userPool.getCurrentUser();\n        // console.log(cognitoUser)\n\n        if (cognitoUser != null) {\n            cognitoUser.getSession(function(err, result) {\n               if (result) {\n                  console.log('You are now logged in.');\n         \n                  // Add the User's Id Token to the Cognito credentials login map.\n                  const loginUrl = 'cognito-idp.'+ config.pool_region +'.amazonaws.com/'+ config.poolData.UserPoolId\n                  AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n                     IdentityPoolId: config.poolData.IdentityPoolId,\n                     Logins: {\n                        loginUrl : result.getIdToken().getJwtToken()\n                     }\n                  });\n                  \n               }\n            });\n         }\n}\n\nexport const update = async ctx => {\n    try {\n        const attributeList = [];\n        attributeList.push(new AmazonCognitoIdentity.CognitoUserAttribute({\n            Name: \"email\",\n            Value: ctx.body.email\n        }));\n\n        const authenticationDetails = new AmazonCognitoIdentity.AuthenticationDetails({\n            Username: ctx.body.id,\n            Password: ctx.body.pw\n        });\n\n        const userData = {\n            Username: ctx.body.id,\n            Pool: userPool\n        };\n\n        //const cognitoUser = new AmazonCognitoIdentity.CognitoUser(userData);\n        cognitoUser.updateAttributes(attributeList,(err,result)=>{\n            if(err){\n                console.log(err);\n            }else{\n                console.log(result);\n            }\n        })\n    } catch (error) {\n        console.log(error);\n    }\n    \n}\n\n\n","import * as authCtrl from './auth.ctrl';\nimport express from 'express';\nconst router = express.Router();\n\nrouter.post('/register',authCtrl.register);\nrouter.post('/login',authCtrl.login);\nrouter.post('/update', authCtrl.update);\n\nexport default router;\n","'use strict';\nimport express from 'express';\nimport cors from 'cors';\nconst app = express();\n//import tockenCheck from 'lib/middleware/tockenCheck';\nimport api from 'api';\n\napp.use(express.urlencoded({extended: false}));\n\napp.use(cors());\napp.use(api);\n//app.use(tokenCheck())\n//    .use(api.routes());\n\nexport default app;\n","import json from 'config/env/env.json';\nconst env = process.env.NODE_ENV || 'dev';\nexport default json[env]; \n","import serverless from 'serverless-http';\nimport app from 'app'; \n\nexport const handler = serverless(app);\n","module.exports = require(\"amazon-cognito-identity-js\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"jwk-to-pem\");","module.exports = require(\"path\");","module.exports = require(\"request\");","module.exports = require(\"serverless-http\");"],"sourceRoot":""}